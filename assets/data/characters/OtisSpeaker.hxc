import flixel.FlxG;
import flixel.FlxSprite;
import objects.TankmenBG;
import objects.ABot;

class OtisSpeaker extends CharacterInfoBase
{

	public function new(){
		super();

		includeInCharacterList = false;
		includeInGfList = true;

		info.name = "otis-speaker";
		info.spritePath = "week7/otisSpeaker";
		info.frameLoadType = setSparrow();
		
		info.iconName = "face";
		info.focusOffset.set();

		addByPrefix('idle', offset(), "otis idle0", 24, loop(false));
		addByPrefix('idle-loop', offset(), "otis idle0", 24, loop(true));

		addByPrefix('shoot1', offset(0, 13), "shoot back0", 24, loop(false));
		addByPrefix('shoot2', offset(-35, 21), "shoot back low0", 24, loop(false));
		addByPrefix('shoot3', offset(238, 96), "shoot forward0", 24, loop(false));
		addByPrefix('shoot4', offset(260, 23), "shoot forward low0", 24, loop(false));

		info.idleSequence = [];

		info.functions.create = create;
		info.functions.postCreate = postCreate;
		info.functions.update = update;
		info.functions.beat = beat;
		info.functions.countdownBeat = countdownBeat;
		info.functions.songStart = songStart;
		info.functions.songEnd = songEnd;
		info.functions.applyShader = applyShader;

		addExtraData("reposition", [-54.5, -250]);
	}

	var abot:ABot;
	var abotLookDir:Bool = false;

	var gunshots:FlxSprite;
	var gunshotPositions:Array<Array<Float>> = [[650, 0], [680, -50], [-540, -50], [-590, -80]];

	function create(character:Character):Void{
		abot = new ABot(-80, 330);
		abot.lookLeft();
		addToCharacter(abot);
	}

	function postCreate(character:Character):Void{
		gunshots = new FlxSprite();
		gunshots.frames = Paths.getSparrowAtlas("week7/otisGunshots");
		gunshots.antialiasing = true;
		gunshots.visible = false;
		gunshots.animation.addByPrefix("shoot1", "shoot back0", 24 , false);
		gunshots.animation.addByPrefix("shoot2", "shoot back low0", 24 , false);
		gunshots.animation.addByPrefix("shoot3", "shoot forward0", 24 , false);
		gunshots.animation.addByPrefix("shoot4", "shoot forward low0", 24 , false);
		gunshots.animation.onFrameChange.add(gunshotFrameUpdate);
		gunshots.animation.onFinish.add(gunshotAnimationEnd);
		addToCharacter(gunshots);
	}

	function update(character:Character, elpased:Float):Void{
		if(TankmenBG.animationNotes.length > 0){
			if(Conductor.songPosition > TankmenBG.animationNotes[0][0]){
				character.playAnim('shoot' + (TankmenBG.animationNotes[0][1] + 1), true);
				gunshots.animation.play('shoot' + (TankmenBG.animationNotes[0][1] + 1), true);
				gunshots.setPosition(character.x + gunshotPositions[TankmenBG.animationNotes[0][1]][0], character.y + gunshotPositions[TankmenBG.animationNotes[0][1]][1]);
				TankmenBG.animationNotes.shift();
			}
		}

		if(!character.debugMode){
			if(playstate.camFocus == "dad" && abotLookDir){
				abotLookDir = !abotLookDir;
				abot.lookLeft();
			}
			else if(playstate.camFocus == "bf" && !abotLookDir){
				abotLookDir = !abotLookDir;
				abot.lookRight();
			}
		}
	}

	function beat(character:Character, beat:Int) {
		abot.bop();
	}

	function countdownBeat(character:Character, beat:Int) {
		abot.bop();
		if(beat % 2 == 0){
			character.playAnim("idle", true);
		}
	}

	function songStart(character:Character):Void{
		abot.setAudioSource(FlxG.sound.music);
		abot.startVisualizer();
	}

	function songEnd(character:Character):Void{
		abot.visualizer.alpha = 0;
	}

	function applyShader(character:Character, shader:FlxShader){
		character.getSprite().shader = shader;
		abot.applyShader(shader);
	}

	function gunshotFrameUpdate(name:String, frame:Int, index:Int):Void{
		if(frame < 2){
			gunshots.visible = true;
			gunshots.blend = BlendMode.ADD;
		}
		else{
			gunshots.blend = BlendMode.NORMAL;
		}
	}
	
	function gunshotAnimationEnd(name:String):Void{
		gunshots.visible = false;
	}

}