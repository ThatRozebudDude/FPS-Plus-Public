import flixel.FlxG;

class MusicEvents extends Events
{

	override function defineEvents() {
		addEvent("muteInst", muteInst, MUTE_INST_DESC);
		addEvent("playInst", playInst, PLAY_INST_DESC);

		addEvent("muteVocals", muteVocals, MUTE_VOCALS_DESC);
		addEvent("playVocals", playVocals, PLAY_VOCALS_DESC);

		addEvent("toggleVocalVolumeLock", toggleVocalVolumeLock, TOGGLE_VOCAL_VOLUME_LOCK_DESC);

		addEvent("playSound", playSound, PLAY_SOUND_DESC);
	}

	function muteInst(tag:String):Void{
		FlxG.sound.music.volume = 0;
	}

	function playInst(tag:String):Void{
		FlxG.sound.music.volume = 1;
	}

	function muteVocals(tag:String):Void{
		var args = Events.getArgs(tag, ["all"]);
		if(playstate.vocalType == splitVocalTrack){
			switch(args[0]){
				case "bf":
					playstate.vocals.volume = 0;
				case "dad":
					playstate.vocalsOther.volume = 0;
				default:
					playstate.vocals.volume = 0;
					playstate.vocalsOther.volume = 0;
			}
		}
		else{
			playstate.vocals.volume = 0;
		}
	}

	function playVocals(tag:String):Void{
		var args = Events.getArgs(tag, ["all"]);
		if(playstate.vocalType == splitVocalTrack){
			switch(args[0]){
				case "bf":
					playstate.vocals.volume = 1;
				case "dad":
					playstate.vocalsOther.volume = 1;
				default:
					playstate.vocals.volume = 1;
					playstate.vocalsOther.volume = 1;
			}
		}
		else{
			playstate.vocals.volume = 1;
		}
	}

	function toggleVocalVolumeLock(tag:String):Void{
		playstate.canChangeVocalVolume = !playstate.canChangeVocalVolume;
	}

	function playSound(tag:String):Void{
		var args = Events.getArgs(tag, ["", "1"]);
		playstate.playSound(Paths.sound(args[0]), Std.parseFloat(args[1]));
	}



	//Event descriptions. Not required but it helps with charting.
	var MUTE_INST_DESC:String = "Mutes the instrumental.";
	var PLAY_INST_DESC:String = "Plays the instrumental.";
	var PLAY_VOCALS_DESC:String = "Plays the vocals.\n\nArgs:\n    String: Voice track (\"bf\", \"dad\", or \"all\")";
	var MUTE_VOCALS_DESC:String = "Mutes the vocals.\n\nArgs:\n    String: Voice track (\"bf\", \"dad\", or \"all\")";
	var TOGGLE_VOCAL_VOLUME_LOCK_DESC:String = "Toggles whether hitting/missing notes will toggle the volume on the vocal tracks.";
	var PLAY_SOUND_DESC:String = "Plays a specified audio file.\n\nArgs:\n    String: Audio file path\n    Float: Volume";
}