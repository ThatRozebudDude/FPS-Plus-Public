import flixel.math.FlxMath;
import flixel.math.FlxPoint;
import flixel.sound.FlxSound;
import flixel.FlxSprite;
import flixel.FlxG;
import flixel.tweens.FlxEase;
import flixel.FlxCamera;
import flixel.FlxCameraFollowStyle;
import openfl.filters.ShaderFilter;
import shaders.DropShadowScreenspaceShader;
import objects.ABot;
import transition.data.InstantTransition;

class StressPicoIntro extends ScriptedCutscene
{

	var tankman:AtlasSprite;
	var pico:AtlasSprite;
	var speakerFront:AtlasSprite;
	var speakerBack:AtlasSprite;
	var speakerCharacter:AtlasSprite;

	var abot:ABot;
	var gunshot:FlxSprite;

	var cutsceneAudio:FlxSound;
	var startOffset:Float = 0.5;

	var tankmanCamera:FlxCamera;
	var picoCamera:FlxCamera;
	var speakerCharacterCamera:FlxCamera;
	var speakerCamera:FlxCamera;
	var frontCamera:FlxCamera;
	var behindCamera:FlxCamera;
	var gunshotCamera:FlxCamera;

	var	tankmanShader:DropShadowScreenspaceShader;
	var	picoShader:DropShadowScreenspaceShader;
	var	speakerCharacterShader:DropShadowScreenspaceShader;
	var	frontShader:DropShadowScreenspaceShader;
	var	behindShader:DropShadowScreenspaceShader;

	var originalZoom:Float;
	var camStartPoint:FlxPoint;

	public function new(args:Array<Dynamic>){
		super(args);

		FlxG.sound.cache(Paths.sound("week7/picoStressCutscene"));

		tankmanCamera = new FlxCamera();
		tankmanCamera.bgColor = 0x00000000;
		tankmanCamera.zoom = playstate.camGame.zoom;
		tankmanCamera.follow(playstate.camFollowFinal, FlxCameraFollowStyle.LOCKON);
		tankmanCamera.focusOn(playstate.camFollowFinal.getPosition());
		
		picoCamera = new FlxCamera();
		picoCamera.bgColor = 0x00000000;
		picoCamera.zoom = playstate.camGame.zoom;
		picoCamera.follow(playstate.camFollowFinal, FlxCameraFollowStyle.LOCKON);
		picoCamera.focusOn(playstate.camFollowFinal.getPosition());

		speakerCharacterCamera = new FlxCamera();
		speakerCharacterCamera.bgColor = 0x00000000;
		speakerCharacterCamera.zoom = playstate.camGame.zoom;
		speakerCharacterCamera.follow(playstate.camFollowFinal, FlxCameraFollowStyle.LOCKON);
		speakerCharacterCamera.focusOn(playstate.camFollowFinal.getPosition());

		speakerCamera = new FlxCamera();
		speakerCamera.bgColor = 0x00000000;
		speakerCamera.zoom = playstate.camGame.zoom;
		speakerCamera.follow(playstate.camFollowFinal, FlxCameraFollowStyle.LOCKON);
		speakerCamera.focusOn(playstate.camFollowFinal.getPosition());

		frontCamera = new FlxCamera();
		frontCamera.bgColor = 0x00000000;
		frontCamera.zoom = playstate.camGame.zoom;
		frontCamera.follow(playstate.camFollowFinal, FlxCameraFollowStyle.LOCKON);
		frontCamera.focusOn(playstate.camFollowFinal.getPosition());
		
		behindCamera = new FlxCamera();
		behindCamera.bgColor = 0x00000000;
		behindCamera.zoom = playstate.camGame.zoom;
		behindCamera.follow(playstate.camFollowFinal, FlxCameraFollowStyle.LOCKON);
		behindCamera.focusOn(playstate.camFollowFinal.getPosition());
		
		gunshotCamera = new FlxCamera();
		gunshotCamera.bgColor = 0x00000000;
		gunshotCamera.zoom = playstate.camGame.zoom;
		gunshotCamera.follow(playstate.camFollowFinal, FlxCameraFollowStyle.LOCKON);
		gunshotCamera.focusOn(playstate.camFollowFinal.getPosition());

		camStartPoint = playstate.camFollowFinal.getPosition();

		FlxG.cameras.insert(behindCamera, 			FlxG.cameras.list.indexOf(playstate.camGame) + 1, false);
		FlxG.cameras.insert(speakerCamera, 			FlxG.cameras.list.indexOf(playstate.camGame) + 2, false);
		FlxG.cameras.insert(speakerCharacterCamera, FlxG.cameras.list.indexOf(playstate.camGame) + 3, false);
		FlxG.cameras.insert(frontCamera, 			FlxG.cameras.list.indexOf(playstate.camGame) + 4, false);
		FlxG.cameras.insert(tankmanCamera, 			FlxG.cameras.list.indexOf(playstate.camGame) + 5, false);
		FlxG.cameras.insert(picoCamera, 			FlxG.cameras.list.indexOf(playstate.camGame) + 6, false);
		FlxG.cameras.insert(gunshotCamera, 			FlxG.cameras.list.indexOf(playstate.camGame) + 7, false);
		
		abot = new ABot(412, 470);
		abot.cameras = [speakerCamera];
		abot.lookLeft();

		gunshot = new FlxSprite(-215, 543);
		gunshot.frames = Paths.getSparrowAtlas("week7/cutscene/picoStress/gunshot");
		gunshot.antialiasing = true;
		gunshot.visible = false;
		gunshot.animation.addByPrefix("anim", "", 24, false);
		gunshot.cameras = [gunshotCamera];
		gunshot.animation.onFinish.add(gunshotAnimationEnd);
		
		tankman = new AtlasSprite(-136, 316, Paths.getTextureAtlas("week7/cutscene/picoStress/tankman"));
		tankman.antialiasing = true;
		tankman.addFullAnimation("anim", 24, false);
		tankman.addFullAnimation("animFastForTest", 800, false);
		tankman.cameras = [tankmanCamera];

		pico = new AtlasSprite(782, 470, Paths.getTextureAtlas("week7/cutscene/picoStress/pico"));
		pico.antialiasing = true;
		pico.addFullAnimation("anim", 24, false);
		pico.addFullAnimation("animFastForTest", 800, false);
		pico.cameras = [picoCamera];

		speakerFront = new AtlasSprite(288, 205, Paths.getTextureAtlas("week7/cutscene/picoStress/speakerFront"));
		speakerFront.antialiasing = true;
		speakerFront.addFullAnimation("anim", 24, false);
		speakerFront.cameras = [frontCamera];
		speakerFront.animationEndCallback = function(name:String){
			removeGeneric(speakerFront);
			frontCamera.filters = [];
			FlxG.cameras.remove(frontCamera, true);
			Utils.destroyWhenAvailable(speakerFront);
		}

		speakerCharacter = new AtlasSprite(287, -712, Paths.getTextureAtlas("week7/cutscene/picoStress/speakerCharacter"));
		speakerCharacter.antialiasing = true;
		speakerCharacter.addFullAnimation("anim", 24, false);
		speakerCharacter.addFullAnimation("animFastForTest", 800, false);
		speakerCharacter.cameras = [speakerCharacterCamera];
		
		speakerBack = new AtlasSprite(206, 105, Paths.getTextureAtlas("week7/cutscene/picoStress/speakerBack"));
		speakerBack.antialiasing = true;
		speakerBack.addFullAnimation("anim", 24, false);
		speakerBack.cameras = [behindCamera];
		speakerBack.animationEndCallback = function(name:String){
			removeGeneric(speakerBack);
			behindCamera.filters = [];
			FlxG.cameras.remove(behindCamera, true);
			Utils.destroyWhenAvailable(speakerBack);
		}

		tankmanShader = new DropShadowScreenspaceShader();
		tankmanShader.setAdjustColor(-46, -38, -25, -20);
		tankmanShader.color = 0xFFDFEF3C;
		tankmanShader.angle = 45;
		tankmanShader.threshold = 0.3;

		picoShader = new DropShadowScreenspaceShader();
		picoShader.setAdjustColor(-46, -38, -25, -20);
    	picoShader.color = 0xFFDFEF3C;
		picoShader.angle = 90;

		speakerCharacterShader = new DropShadowScreenspaceShader();
		speakerCharacterShader.setAdjustColor(-46, -38, -25, -20);
    	speakerCharacterShader.color = 0xFFDFEF3C;
		speakerCharacterShader.angle = 90;
		
		frontShader = new DropShadowScreenspaceShader();
		frontShader.setAdjustColor(-46, -38, -25, -20);
    	frontShader.color = 0xFFDFEF3C;
		frontShader.angle = 90;
		frontShader.threshold = 0.4;

		behindShader = new DropShadowScreenspaceShader();
		behindShader.setAdjustColor(-46, -38, -25, -20);
    	behindShader.color = 0xFFDFEF3C;
		behindShader.angle = 90;
		behindShader.threshold = 0.4;

		tankmanCamera.filters = [new ShaderFilter(tankmanShader)];
		picoCamera.filters = [new ShaderFilter(picoShader)];
		speakerCharacterCamera.filters = [new ShaderFilter(speakerCharacterShader)];
		frontCamera.filters = [new ShaderFilter(frontShader)];
		behindCamera.filters = [new ShaderFilter(behindShader)];

		abot.applyShader(speakerCharacterShader);

		originalZoom = playstate.defaultCamZoom;
		playstate.customTransIn = new InstantTransition();
		playstate.camOverlay.fade(0xFF000000, 0);

		addEvent(0, 					setup);
		addEvent(startOffset, 			startCutscene);
		addEvent(startOffset + 150/24, 	camera1);
		addEvent(startOffset + 205/24, 	camera2);
		addEvent(startOffset + 270/24, 	camera3);
		addEvent(startOffset + 301/24, 	camera4);
		addEvent(startOffset + 325/24, 	camera5);
		addEvent(startOffset + 330/24, 	camera6);
		addEvent(startOffset + 336/24, 	camera7);
		addEvent(startOffset + 579/24, 	camera8);
		addEvent(startOffset + 669/24, 	camera9);
		addEvent(startOffset + 672/24, 	camera10);
		addEvent(startOffset + 733/24, 	camera11);
		addEvent(startOffset + 33.5, 	end);
		addEvent(startOffset + 33.5 + (Conductor.crochet / 1000) * 5, swapBackToGameplayTankman);
	}

	override function update(elapsed:Float){
		super.update(elapsed);
		tankmanCamera.zoom = playstate.camGame.zoom;
		speakerCharacterCamera.zoom = playstate.camGame.zoom;
		speakerCamera.zoom = playstate.camGame.zoom;
		behindCamera.zoom = playstate.camGame.zoom;
		frontCamera.zoom = playstate.camGame.zoom;
		picoCamera.zoom = playstate.camGame.zoom;
		gunshotCamera.zoom = playstate.camGame.zoom;

		tankmanShader.curZoom = tankmanCamera.zoom;
		picoShader.curZoom = picoCamera.zoom;
		speakerCharacterShader.curZoom = speakerCharacterCamera.zoom;
		frontShader.curZoom = frontCamera.zoom;
		behindShader.curZoom = behindCamera.zoom;
	}

	function setup(){
		addGeneric(speakerBack);
		addGeneric(abot);
		addGeneric(speakerCharacter);
		addGeneric(speakerFront);
		addGeneric(pico);
		addGeneric(tankman);
		addGeneric(gunshot);

		playstate.camChangeZoom(0.68, 0);
	}

	function startCutscene(){
		dad.visible = false;
		gf.visible = false;
		boyfriend.visible = false;

		pico.playAnim("anim");
		tankman.playAnim("anim");
		speakerCharacter.playAnim("anim");
		speakerFront.playAnim("anim");
		speakerBack.playAnim("anim");

		cutsceneAudio = playstate.playSound(Paths.sound("week7/picoStressCutscene"));

		playstate.camChangeZoom(0.7, 150/24);
		playstate.camOverlay.stopFX();
		playstate.camOverlay.flash(0xFF000000, 8/24);
	}

	function camera1(){
		playstate.camChangeZoom(1.08, 31/24, FlxEase.quadOut);
		playstate.camMove(camStartPoint.x + 40, camStartPoint.y - 144, 31/24, FlxEase.quadOut);
	}
	
	function camera2(){
		playstate.camMove(camStartPoint.x + 10, camStartPoint.y - 144, 0.9, FlxEase.quartOut);
	}

	function camera3(){
		playstate.camChangeZoom(0.76, 27/24, FlxEase.cubeIn);
		playstate.camMove(camStartPoint.x, camStartPoint.y - 600, 27/24, FlxEase.cubeIn);
	}
	
	function camera4(){
		playstate.camMove(camStartPoint.x + 50, camStartPoint.y - 550, 24/24, FlxEase.linear);
	}

	function camera5(){
		playstate.camChangeZoom(1.03, 5/24, FlxEase.linear);
		playstate.camMove(camStartPoint.x + 495, camStartPoint.y + 35, 5/24, FlxEase.linear);
	}
	
	function camera6(){
		playstate.camMove(camStartPoint.x + 535, camStartPoint.y + 75, 6/24, FlxEase.quartOut);
	}
	
	function camera7(){
		playstate.camChangeZoom(1.04, 20/24, FlxEase.quadInOut);
	}

	function camera8(){
		playstate.camChangeZoom(0.87, 26/24, FlxEase.cubeInOut);
		playstate.camMove(camStartPoint.x - 150, camStartPoint.y, 26/24, FlxEase.cubeInOut);
	}
	
	function camera9(){
		gunshot.visible = true;
		gunshot.animation.play("anim");
		playstate.camMove(camStartPoint.x - 190, camStartPoint.y, 2/24, FlxEase.quartOut);
	}

	function camera10(){
		playstate.camMove(camStartPoint.x - 185, camStartPoint.y, 5/24, FlxEase.quartOut);
	}
	
	function camera11(){
		playstate.camChangeZoom(0.80, 60/24, FlxEase.quadInOut);
		playstate.camMove(camStartPoint.x, camStartPoint.y, 60/24, FlxEase.quadInOut);
	}

	function end(){
		//clean up stuff
		removeGeneric(abot);
		removeGeneric(speakerCharacter);
		removeGeneric(pico);
		removeGeneric(gunshot);
		
		abot.destroy();
		speakerCharacter.destroy();
		pico.destroy();
		gunshot.destroy();

		speakerCamera.filters = [];
		speakerCharacterCamera.filters = [];
		picoCamera.filters = [];

		FlxG.cameras.remove(speakerCamera, true);
		FlxG.cameras.remove(speakerCharacterCamera, true);
		FlxG.cameras.remove(picoCamera, true);

		gf.visible = true;
		boyfriend.visible = true;

		playstate.camHUD.visible = true;
		playstate.camChangeZoom(originalZoom, (Conductor.crochet / 1000) * 5, FlxEase.quadInOut);
		focusCameraBasedOnFirstSection((Conductor.crochet / 1000) * 5, FlxEase.quadInOut);
		next();
	}
	
	function swapBackToGameplayTankman(){
		removeGeneric(tankman);
		tankman.destroy();
		tankmanCamera.filters = [];
		FlxG.cameras.remove(tankmanCamera, true);
		dad.visible = true;
	}

	function gunshotAnimationEnd(name:String):Void{
		gunshot.visible = false;
		gunshot.alpha = 0;
	}

}