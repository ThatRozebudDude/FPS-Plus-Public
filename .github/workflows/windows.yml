# This is a basic workflow to help you get started with Actions

name: Windows Build CI

# Controls when the workflow will run
on: [pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Haxe
        uses: krdlab/setup-haxe@v1.5.1
        with:
          haxe-version: 4.3.1
      # Runs a set of commands using the runners shell
      - name: Install Haxe Libraries
        run: |
         mkdir "%HAXELIB_SETUP%"
         haxelib setup "%HAXELIB_SETUP%"
         haxelib install lime
         haxelib run lime setup
         haxelib install openfl
         haxelib install flixel
         haxelib install flixel-addons
         haxelib install flixel-ui
         haxelib install compiletime
         haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp.git
         haxelib git flxanimate https://github.com/Dot-Stuff/flxanimate.git 35692ff335033aa4e6e52ae498d32479053d6256
         haxelib git funkin.vis https://github.com/FunkinCrew/funkVis.git d5361037efa3a02c4ab20b5bd14ca11e7d00f519
         haxelib git grig.audio https://gitlab.com/haxe-grig/grig.audio.git 57f5d47f2533fd0c3dcd025a86cb86c0dfa0b6d2
         haxelib git hxCodec https://github.com/FunkinCrew/hxCodec.git 61b98a7a353b7f529a8fec84ed9afc919a2dffdd
         haxelib --never list
      - name: Compile FPS Plus Build
        run: haxelib run lime build windows
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export/release/windows/bin
